<?xml version="1.0" encoding="UTF-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC5226 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
  
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-dogecoin-payment-protocol-01" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->
  <!-- ***** FRONT MATTER ***** -->
  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
        full title is longer than 39 characters -->
    <title abbrev="Abbreviated Title">Dogecoin Payment Protocol</title>
    
    <!-- add 'role="editor"' below for the editors if appropriate -->
    <!-- Another author who claims to be an editor -->
    <author fullname="Ross Nicoll" initials="J.R.N." role="editor" surname="Nicoll">
      <organization>University of Edinburgh</organization>
      <address>
        <postal>
          <street/>
          <!-- Reorder these if your country does things differently -->
          <city>Edinburgh</city>
          <region/>
          <code/>
          <country>UK</country>
        </postal>
        <email>Ross.Nicoll@ed.ac.uk</email>
        <!-- phone, uri and facsimile elements may also be added -->
      </address>
    </author>
    
    <date year="2014"/>
    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->
    <!-- Meta-data Declarations -->
    <area>General</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->
        
    <keyword>cryptocurrency</keyword>
    <keyword>payment</keyword>
    <keyword>dogecoin</keyword>
    <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->
        
    <abstract>
      <t>This document outlines a protocol and file formats for payments using Bitcoin-derived
      cryptocurrencies such as Dogecoin. This protocol is intended to simplify the payment processing
      from the perspective of the customer, as well as reducing scope for user error.</t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction">
      <t>Currently cryptocurrency payment solutions suffer from a number of issues:</t>
      <t>
        <list style="symbols">
          <t>They often require the user to manually cut &amp; paste the payment address and amount.</t>
          <t>There is no verification of the origin of a payment request</t>
          <t>There is no integrity check on a payment request to prevent man-in-the-middle attacks</t>
          <t>There is no automated solution for providing refund addresses as part of a payment</t>
          <t>The receiving user or system may have to poll to check for payments,
			instead of receiving notification when payment is sent</t>
        </list>
      </t>
	  
	  <t>
		This document outlines a payment protocol which resolves these issues
		by defining a sequence of messages to be exchanged between the merchant
		server and user's client software.
	  </t>
      
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>
	
	<!-- Terms used -->
	
    <section title="Outline">
	  <t>The payment protocol exchanges three messages between the merchant
	  server and the wallet software:</t>
	  <t>
        <list style="symbols">
          <t>PaymentRequest: Retrieved by the wallet client. Defines the
		  amount to be paid, how payment should be made, and the endpoint
		  to notify when payment has been sent.</t>
          <t>Payment: Sent by the wallet client to the merchant server once
		  payment has been sent. Specifies the transaction(s) which
		  form the payment, as well as details of where to refund payment
		  to if necessary.</t>
		  <t>PaymentACK: Returned to the wallet client from the merchant
		  server in response to the Payment message. Acknowledges receipt of
		  the Payment message, and current state of the transactions
		  as seen by the merchant server.</t>
        </list>
	  </t>
	  <t>
	    This document describes payment over HTTP as a transport layer.
		Other transport layers (such as NFC) are left for future work.
	  </t>
	  
	  <t>The payment protocol steps are as follows:</t>
	  
	  <t>
        <list style="numbers">
		  <t>Merchant server prompts user for payment</t>
          <t>User initiates payment (for example opens a URL link)</t>
        </list>
	  </t>
	  
	</section>
    
    <section anchor="Acknowledgements" title="Acknowledgements">
    </section>
    
    <!-- Possibly a 'Contributors' section ... -->
    <section anchor="IANA" title="IANA Considerations">
    </section>
    
    <section anchor="Security" title="Security Considerations">
    </section>
  </middle>
  <!--  *****BACK MATTER ***** -->
  <back>
    <!-- References split into informative and normative -->
    <!-- There are 2 ways to insert reference entries from the citation libraries:
    1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
    2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
       (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

    Both are cited textually in the same manner: by using xref elements.
    If you use the PI option, xml2rfc will, by default, try to find included files in the same
    directory as the including file. You can also define the XML_LIBRARY environment variable
    with a value containing a set of directories to search.  These can be either in the local
    filing system or remote ones accessed by http (http://domain/dir/... ).-->
    <references title="Normative References"><!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
     &RFC2119;

      <reference anchor="min_ref"><!-- the following is the minimum to make xml2rfc happy -->
        <front>
          <title>Minimal Reference</title>
          <author initials="authInitials" surname="authSurName"><organization/></author>
          <date year="2006"/>
        </front>
      </reference>
    </references>
    <references title="Informative References"><!-- Here we use entities that we defined at the beginning. -->

     &RFC2629;

     &RFC3552;

     &RFC5226;

     <!-- A reference written by by an organization not a person. -->

     <reference anchor="DOMINATION" target="http://www.example.com/dominator.html">
       <front>
         <title>Ultimate Plan for Taking Over the World</title>
         <author><organization>Mad Dominators, Inc.</organization></author>
         <date year="1984"/>
       </front>
     </reference>
   </references>
    <section anchor="app-additional" title="Additional Stuff">
      <t>This becomes an Appendix.</t>
    </section>
  </back>
</rfc>
